//import net.serenitybdd.builds.ProjectVersionCounter

buildscript {
    repositories {
        mavenLocal()
//        jcenter()
    }
}

// Building
apply plugin: 'java'
apply plugin: 'groovy'

//plugins {
//    id "com.jfrog.bintray" version "1.8.4"
//    id 'java'
//    id 'groovy'
//    id 'maven'
//    id 'maven-publish'
//}


sourceCompatibility = 1.8
targetCompatibility = 1.8

// Deploying
apply plugin: 'maven'

repositories {
    mavenCentral()
    mavenLocal()
//    jcenter()
//    maven() {
//        url "http://dl.bintray.com/serenity/maven/"
//        credentials {               // Optional resolver credentials (leave out to use anonymous resolution)
//            username = System.properties['bintrayUsername'] // Artifactory user name
//            password = System.properties['bintrayApiKey'] // Password or API Key
//        }
//    }
}

// Signing
apply plugin: 'signing'
signing {
    sign configurations.archives
}

ext {
    projectDescription = 'Serenity Cucumber 6.x integration'
//    bintrayBaseUrl = 'https://api.bintray.com/maven'
//    bintrayRepository = 'maven'
//    bintrayPackage = 'serenity-cucumber6'
//
//    if (!project.hasProperty("bintrayUsername")) {
//        bintrayUsername = 'wakaleo'
//    }
//    if (!project.hasProperty("bintrayApiKey")) {
//        bintrayApiKey = ''
//    }

    if (!project.hasProperty("nextVersion")) {
        nextVersion = "${serenityCoreVersion}-SNAPSHOT"
    }
}

group = 'net.serenity-bdd'
archivesBaseName = "serenity-cucumber6"
version = nextVersion


task createNewVersionTag(type: Exec) {
    executable "sh"
    args "-c", "git tag -f -a v$nextVersion -m'release tag'"
}

task pushVersionTag(type: Exec, dependsOn: 'createNewVersionTag') {
    executable "sh"
    args "-c", "git push -f origin v$nextVersion"
}

task tagNewVersion() {
    dependsOn pushVersionTag
}

wrapper {
    gradleVersion = '6.4'
}

test {
    include '**/When*'
    include '**/Cucumber*'
    include '**/ScenarioLineCount*'
    exclude '**/*$*'
    exclude '**/integration/**'
    exclude '**/samples/**'
    exclude '**/*Sample*'
    maxParallelForks = Runtime.runtime.availableProcessors() * 4
}


configurations.all {
    resolutionStrategy {
        // fail fast on dependency convergence problems
        //failOnVersionConflict()
        force "commons-collections:commons-collections:${commonsCollectionsVersion}",
                "xml-apis:xml-apis:${xmlApiVersion}",
                "commons-codec:commons-codec:${commonsCodecVersion}",
                "com.google.code.gson:gson:${gsonVersion}"
    }
}

dependencies {
    compile("net.serenity-bdd:serenity-core:${serenityCoreVersion}")
    compile("net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}")
    compile("net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}")
    compile "io.cucumber:cucumber-java:${cucumberJVMVersion}"
    compile("io.cucumber:cucumber-junit:${cucumberJVMVersion}") {
        exclude group: "junit"
    }
    compile "io.cucumber:datatable-matchers:${cucumberDatatableMatchers}"

    compile("commons-logging:commons-logging:${commonsLoggingVersion}")
    compile("org.apache.commons:commons-csv:${commonsCsvVersion}")
    compile "junit:junit:${junitVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"

    testCompile("ch.qos.logback:logback-classic:${logbackVersion}") {
        exclude module: "slf4j-api"
    }
    testCompile "org.assertj:assertj-core:${assertjVersion}"
    testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testCompile("org.spockframework:spock-core:${spockVersion}") {
        exclude group: "junit"
        exclude module: "groovy-all"
    }
    testCompile("com.github.goldin:spock-extensions:${spockExtensionsVersion}") {
        exclude module: "spock-core"
        exclude module: "slf4j-api"
    }
    testCompile("com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}")
    testCompile "io.cucumber:cucumber-java8:${cucumberJVMVersion}"
}

jar {
    manifest {
        attributes("Implementation-Title": "Serenity Cucumber 5 Plugin",
                "Implementation-Version": project.version.toString())
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//
//            println "Publishing $project.name:$project.group:$project.version"
//
//            from components.java
//
//            artifact sourcesJar {
//                classifier "sources"
//            }
//
//            artifact javadocJar {
//                classifier "javadoc"
//            }
//
//            pom.withXml {
//                asNode().children().last() + {
//                    resolveStrategy = Closure.DELEGATE_FIRST
//                    name 'serenity-cucumber6'
//                    description 'Serenity Cucumber Integration'
//
//                    url 'https://github.com/serenity-bdd/serenity-cucumber6'
//                    scm {
//                        url 'scm:git:git@github.com:serenity-bdd/serenity-cucumber6.git'
//                        connection 'scm:git:git@github.com:serenity-bdd/serenity-cucumber6.git'
//                        developerConnection 'scm:git:git@github.com:serenity-bdd/serenity-cucumber6f.git'
//                    }
//                    licenses {
//                        license {
//                            name 'The Apache Software License, Version 2.0'
//                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
//                            distribution 'repo'
//                        }
//                    }
//                    developers {
//                        developer {
//                            id 'cliviu'
//                            name 'Liviu Carausu'
//                            email 'liviu.carausu@gmail.com'
//                        }
//                        developer {
//                            id 'johnsmart'
//                            name 'John Ferguson Smart'
//                            email 'john.smart@wakaleo.com'
//                        }
//                    }
//                }
//                // Preserve compile-scope dependencies
//                asNode().dependencies.'*'.findAll() {
//                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
//                        dep.name == it.artifactId.text()
//                    }
//                }.each() {
//                    it.scope*.value = 'compile'
//                }
//            }
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:-options"
}
1
//bintray {
//    user = bintrayUsername //this usually comes form gradle.properties file in ~/.gradle
//    key = bintrayApiKey //this usually comes form gradle.properties file in ~/.gradle
//    publications = ['mavenJava'] // see publications closure
//    publish = true
//    pkg {
//        repo = 'maven'
//        name = 'serenity-cucumber6'
//        userOrg = 'serenity'
//        desc = 'Serenity Cucumber integration'
//        licenses = ['Apache-2.0']
//        labels = ['serenity', 'bdd', 'cucumber']
//        vcsUrl = 'https://github.com/serenity-bdd/serenity-cucumber6.git'
//
//        version {
//            name = nextVersion
//            desc = "Serenity Cucumber 6 integration version ${nextVersion}"
//            released = new Date()
//            vcsTag = "v${nextVersion}"
//        }
//    }
//}

// Build, sign, and upload
uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name 'Serenity BDD Cucumber 6 Integration'
                packaging 'jar'
                description 'Run Serenity tests and generate Serenity reports using Cucumber 6'
                url 'https://github.com/serenity-bdd/serenity-cucumber6'

                scm {
                    connection 'scm:git:git://github.com/serenity-bdd/serenity-cucumber6.git'
                    developerConnection 'scm:git:ssh://github.com/serenity-bdd/serenity-cucumber6'
                    url 'https://github.com/serenity-bdd/serenity-cucumber6/tree/master'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'johnsmart'
                        name 'John Ferguson Smart'
                        email 'john.smart@wakaleo.com'
                    }
                    developer {
                        id "cliviu"
                        name "Liviu Carausu"
                        email 'liviu.carausu@gmail.com'
                    }
                }
            }
        }
    }
}

task copyDeps(type: Copy) {
    from configurations.runtime + configurations.testCompile
    into project.projectDir.path + "/lib"
}
